ls
ls()
data<-read.table(pipe("pbpaste"),header=TRUE,dec=".",sep="\t",row.names=1)
str(data)
data
data<-read.table(pipe("pbpaste"),header=TRUE,dec=".",sep="\t",row.names=1)
data
STACK: Turn table (C) into (D):#
# C#
#    a  b  c  d#
# A  3  2  .  .#
# B  .  .  1  1#
#
# D#
# A  a  3#
# A  b  2#
# A  c  .#
# A  d  .#
# B  a  .#
# B  b  .#
# B  c  1#
# B  d  1#
#-------------------------------------------------------------#
vectorize <- function(mat)#
{#
  mat <- t(mat)#
  cbind(expand.grid(dimnames(mat))[2:1], as.vector(mat))#
}
vecotrize(data)
vectorize(data)
x <- rnorm(1000)#
y <- rnorm(1000) #
plot(x,y, main="PDF Scatterplot Example", col=rgb(0,100,0,50,maxColorValue=255), pch=16)
x <- rnorm(1000)#
y <- rnorm(1000) #
plot(x,y, main="PDF Scatterplot Example", col=rgb(0,100,0,50,maxColorValue=255), pch=16,cex=3)
x <- rnorm(1000)#
y <- rnorm(1000) #
plot(x,y, main="PDF Scatterplot Example", col="green", pch=16,cex=3)
x <- rnorm(1000)#
y <- rnorm(1000) #
plot(x,y, main="PDF Scatterplot Example", col="blue", pch=16,cex=3)
x <- rnorm(1000)#
y <- rnorm(1000) #
plot(x,y, main="PDF Scatterplot Example", col=rgb(0,0,100,50,maxColorValue=255), pch=16,cex=3)
mat<-read.table(pipe("pbpaste"),header=TRUE,dec=".")
mat
networklevel(mat)
library(bipartite)
networklevel(mat)
library(bipartite)
mat<-read.table(pipe("pbpaste"),header=TRUE,dec=".")
mat
networklevel(mat)
library(ggplot2)
library(bipartite)
ls()
library(ade4)
update.packages(checkBuilt=TRUE)
library(move)
?move
??move
?plotBursts
?move
?summary
test <- move(system.file("extdata","leroy.csv.gz", package="move"))
library(move)
test <- move(system.file("extdata","leroy.csv.gz", package="move"))
test
plot(test)
plotBursts(testb, breaks=3, add=TRUE, pch=19)
funding<-<-read.table(pipe("pbpaste"),header=TRUE,dec=".")
funding<-read.table(pipe("pbpaste"),header=TRUE,dec=".")
str(funding)
sumamry(funding)
summary(funding)
funding<-read.table(pipe("pbpaste"),header=TRUE,dec=".")
summary(funding)
SEQ  <- seq(1,100)#
pb   <- txtProgressBar(1, 100, style=3)#
TIME <- Sys.time()#
for(i in SEQ){#
    Sys.sleep(0.02)#
    setTxtProgressBar(pb, i)#
  }#
Sys.time() - TIME
install.packages("rkward")
load(".RData")
ls()
base::source("/tmp/r-plugin-pedro/Rsource-35505-sde.R")
qnc<-PE.5000$visit*PE.5000$nflow
A test file for batch mode
ls()
Rarefaction analyses.
Prueba#
x<- rnorm(1000)#
hist(x)#
y<- rnorm(1000)#
plot(x,y)#
ls()
Empirical data-------------@.@
N=27; # rows
M=2; # columns
A <- matrix(c(1,0,#
   1,1,#
   1,2,#
   0,2,#
   2,2,#
   2,0,#
   2,0,#
   0,2,#
   2,1,#
   0,0,#
   2,1,#
   1,0,#
   1,0,#
   0,0,#
   1,1,#
   0,0,#
   2,2,#
   2,2,#
   2,2,#
   1,2,#
   2,1,#
   0,0,#
   1,0,#
   0,0,#
   1,1,#
   1,1, #
   1,1),#
   27,2)
A
dim(A)
bi<-function (x,N,M) {#
EBI <- 0#
Ebi <- 0#
i<-0#
j<-0#
k<-0#
 for (i in 1:N-1)#
     i#
     for (j in 1:M-1)#
       j#
         if (A[i,j]==2)#
             for (k in j+1:M)#
             k#
                if (A[i,k]==2)#
               i#
               j#
               k#
                    ebi <- 1#
                       else#
                          ebi <- 0#
                    Ebi <- sum(ebi)#
                    EBI <- EBI+sum(Ebi)     #
	            end#
             end#
         end#
      end#
 end#
cat("Number of bicliques: ",EBI)#
}
-------------------------#
bi<-function (x,N,M) {#
EBI <- 0#
Ebi <- 0#
i<-0#
j<-0#
k<-0#
 for (i in 1:N-1)#
     i#
     for (j in 1:M-1)#
       j#
         if (A[i,j]==2)#
             for (k in j+1:M)#
             k#
                if (A[i,k]==2)#
               i#
               j#
               k#
                    ebi <- 1#
#                       else#
                          ebi <- 0#
                    Ebi <- sum(ebi)#
                    EBI <- EBI+sum(Ebi)     #
	            end#
             end#
         end#
      end#
 end#
cat("Number of bicliques: ",EBI)#
}#
# -----------------------------------------------------------------
bi(A)
bi(A,N,M)
bi(A,27,2)
-------------------------#
bi<-function (x,N,M) {#
EBI <- 0#
Ebi <- 0#
i<-0#
j<-0#
k<-0#
 for (i in 1:N-1)#
     i#
     for (j in 1:M)#
       j#
         if (A[i,j]==2)#
             for (k in j+1:M)#
             k#
                if (A[i,k]==2)#
               i#
               j#
               k#
                    ebi <- 1#
#                       else#
                          ebi <- 0#
                    Ebi <- sum(ebi)#
                    EBI <- EBI+sum(Ebi)     #
	            end#
             end#
         end#
      end#
 end#
cat("Number of bicliques: ",EBI)#
}#
# -----------------------------------------------------------------
bi(A,27,2)
-------------------------#
bi<-function (x,N,M) {#
EBI <- 0#
Ebi <- 0#
i<-0#
j<-0#
k<-0#
 for (i in 1:N-1)#
     for (j in 1:M)#
         if (A[i,j]==2)#
             for (k in j+1:M)#
                if (A[i,k]==2)#
                    ebi <- 1#
#                       else#
                          ebi <- 0#
                    Ebi <- sum(ebi)#
                    EBI <- EBI+sum(Ebi)     #
	            end#
             end#
         end#
      end#
 end#
cat("Number of bicliques: ",EBI)#
}
bi(A,27,2)
-------------------------#
bi<-function (x,N,M) {#
EBI <- 0#
Ebi <- 0#
 for (i in 1:N)#
     for (j in 1:M)#
         if (A[i,j]==2)#
             for (k in j+1:M)#
                if (A[i,k]==2)#
                    ebi <- 1#
#                       else#
                          ebi <- 0#
                    Ebi <- sum(ebi)#
                    EBI <- EBI+sum(Ebi)     #
	            end#
             end#
         end#
      end#
 end#
cat("Number of bicliques: ",EBI)#
}#
# -----------------------------------------------------------------
bi(A,27,2)
A
-------------------------#
bi<-function (x,N,M) {#
EBI <- 0#
Ebi <- 0#
 for (i in 1:N)#
     for (j in 1:2)#
         if (A[i,j]==2)#
             for (k in j+1:M)#
                if (A[i,k]==2)#
                    ebi <- 1#
#                       else#
                          ebi <- 0#
                    Ebi <- sum(ebi)#
                    EBI <- EBI+sum(Ebi)     #
	            end#
             end#
         end#
      end#
 end#
cat("Number of bicliques: ",EBI)#
}#
# -----------------------------------------------------------------
bi(A,27,2)
-------------------------#
bi<-function (x,N,M) {#
EBI <- 0#
Ebi <- 0#
 for (i in 1:N)#
     for (j in 1:2)#
         if (A[i,j]==2)#
             for (k in 2:M)#
                if (A[i,k]==2)#
                    ebi <- 1#
#                       else#
                          ebi <- 0#
                    Ebi <- sum(ebi)#
                    EBI <- EBI+sum(Ebi)     #
	            end#
             end#
         end#
      end#
 end#
cat("Number of bicliques: ",EBI)#
}#
# -----------------------------------------------------------------
bi(A,27,2)
sum(ebi)
i=1
j=1
k=2
if (A[i,j]==2)#
             for (k in 2:M)#
                if (A[i,k]==2)#
                    ebi <- 1
ebi
A[i,j]
A[i,k]
i=4
j=1
k=2
A[i,j]
i
A[[i,j]]
A[i,j]
i
k
j
A[i,][,j]
A[,i][,j]
A[,i][j,]
A[,i][,j]
A[,i]
dim(A)
dim(A[1])
dim(A[[1]])
A[4,1]
A[4,2]
A[10,2]
i
j
A[i,j]
i=5
j=1
k=2
A[i,j]
i
A[c(i,j)]
i
nrows(A)
nrow(A)
bi<-function (x,N,M) {#
EBI <- 0#
Ebi <- 0           #
 for (i in 1:nrow(A))#
         if (A[,1]==2 & A[,2]==2) #
 #          if ()#
               {ebi <- 1} else#
               {ebi <- 0}#
                    Ebi <- sum(ebi)#
                    EBI <- EBI+sum(Ebi)     #
	            end#
             end#
         end#
      end#
 end#
cat("Number of bicliques: ",EBI)#
}
bi(A,27,2)
warnings()
bi<-function (x,N,M) {#
EBI <- 0#
Ebi <- 0              #
 for (i in 1:nrow(A))#
         if (A[,1]==2) #
           if (A[,2]==2)#
               {ebi <- 1} else#
               {ebi <- 0}#
                    Ebi <- sum(ebi)#
                    EBI <- EBI+sum(Ebi)     #
	            end#
             end#
         end#
      end#
 end#
cat("Number of bicliques: ",EBI)#
}#
# -----------------------------------------------------------------
bi(A,27,2)
bi<-function (x,N,M) {#
EBI <- 0#
Ebi <- 0              #
 for (i in 1:nrow(A))#
         if (A[,1]==2) {#
           if (A[,2]==2) ebi <- 1} else#
               {ebi <- 0}#
                    Ebi <- sum(ebi)#
                    EBI <- EBI+sum(Ebi)     #
	            end#
             end#
         end#
      end#
 end#
cat("Number of bicliques: ",EBI)#
}
bi(A,27,2)
bi<-function (x,N,M) {#
EBI <- 0#
Ebi <- 0              #
 for (i in 1:nrow(A))#
         if (A[,1]==2) {#
           if (A[,2]==2) {ebi <- 1} else#
               {ebi <- 0}#
                        }#
                    Ebi <- sum(ebi)#
                    EBI <- EBI+sum(Ebi)     #
	            end#
             end#
         end#
      end#
 end#
cat("Number of bicliques: ",EBI)#
}
bi(A,27,2)
warnings()
bi<-function (x,N,M) {#
EBI <- 0#
Ebi <- 0              #
 for (i in 1:nrow(A))#
         if (A[i,1]==2) {#
           if (A[i,2]==2) {ebi <- 1} else#
               {ebi <- 0}#
                        }#
                    Ebi <- sum(ebi)#
                    EBI <- EBI+sum(Ebi)     #
	            end#
             end#
         end#
      end#
 end#
cat("Number of bicliques: ",EBI)#
}#
# -----------------------------------------------------------------
bi(A,27,2)
i
A[i,1]
A[c(i),1]
A[5,1]
A[6,1]
A[7,1]
qnc<-PE.5000$visit*PE.5000$nflow
> clear()
> rnorm(10)
>
s()
>
> ls()
x*2#
summary(x)#
hist(x)
?ggnet
library(GGally)
?ggnet
? GGally
?rename
library(bipartite)#
plotweb(small1976)
?anova
y <- c(1:3, 7, 5)#
x <- c(1:3, 6:7)#
( ee <- effects(lm(y ~ x)) )#
c( round(ee - effects(lm(y+10 ~ I(x-3.8))), 3) )
require(devtools)#
install_github("popgraph","dyerlab")
library(betapart)
?betapart
LIsa_HD:Users:pedro:Dropbox:Working:~RCode:MyRCode:effectiveness:auto-isolines.R
x<- rnorm(500)#
length(x)#
ppp<- rep_len("ttt",500)#
X<- data.frame(ppp,as.numeric(x))#
colnames(X)<- c("ppp","x")#
m<-mean(X[,2])#
rndmz<- 500#
se.X<- sd(X[,2])/sqrt(rndmz)#
# Display estimates and standard errors in various ways#
#z1<-(obs.diffs-apply(df,2,mean))/(apply(df,2,sd)/sqrt(rndmz))#
#
se <- ggplot(X, aes(ppp, x,#
                       ymin = m - se.X, #
                       ymax = m + se.X))#
#se + geom_linerange()#
#se + geom_pointrange()#
se + geom_errorbar(width = 0.05)#
se + geom_crossbar(width = 0.05)#
#
library(Hmisc)#
m2 <- ggplot(X, aes(ppp, y=x)) #+ geom_point()#
m2 <- m2 + stat_summary(fun.data = "mean_cl_boot", geom = "crossbar",#
                        colour = "grey",#
                        fill="blue",width = 0.3) + xlab("rating")#
m2 + geom_point(aes(1,1.5, colour="red"))
library(dplyr)
data(cars)
data(mtcars)
library(MASS)
datasets(MASS)
data(mtcars)
data(cars)
?cars
library(gstudio)
?gstudio
??gstudio
?gstudio-package
?dist_amova
40/10*2
10-14/2+3*5
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
library(dplyr)
devtools::install_github("hadley/dplyr")
install.packages("dplyr")
devtools::install_github("rmarkdown", "rstudio")
library(dplyr)
install.packages("dplyr")
install.packages("rmarkdown")
library(lmmfit)
?lmmfit
?pf#
pchisq(10.4, 7, ncp = 0, lower.tail = TRUE, log.p = FALSE)#
1-pchisq(10.4, 7, ncp = 0, lower.tail = TRUE, log.p = FALSE)#
#
1-pchisq(11.81, 3, ncp = 0, lower.tail = TRUE, log.p = FALSE)#
1-pchisq(5.134, 1, ncp = 0, lower.tail = TRUE, log.p = FALSE)#
?pf#
pchisq(10.4, 7, ncp = 0, lower.tail = TRUE, log.p = FALSE)#
1-pchisq(10.4, 7, ncp = 0, lower.tail = TRUE, log.p = FALSE)#
#
1-pchisq(11.81, 3, ncp = 0, lower.tail = TRUE, log.p = FALSE)#
#
#
clear#
1-pchisq(12.9, 1, ncp = 0, lower.tail = TRUE, log.p = FALSE)#
1-pchisq(4.3, 1, ncp = 0, lower.tail = TRUE, log.p = FALSE)#
#
1-pchisq(1.69, 1, ncp = 0, lower.tail = TRUE, log.p = FALSE)#
#
#
1-pchisq(1.69, 1, ncp = 0, lower.tail = TRUE, log.p = FALSE) #
chi<- function (pp,df) {#
	1-pchisq(pp,df, ncp = 0, lower.tail = TRUE, log.p = FALSE) #
}#
chi(1.69,1)#
chi(2.8,1)#
#
chi(3.8,1)#
chi(9.5,1)#
#
chi(4.35,1)#
chi(3.75,1)#
chi(4.6,1)#
#
citation()#
library(vegan)#
?vegan#
library(estimate)#
library(ecosim)#
?ecosim#
library(EcoSim)#
#
library(EcoSimR)#
#
#
x<- rnorm(500)#
length(x)#
ppp<- rep_len("ttt",500)#
X<- data.frame(ppp,as.numeric(x))#
colnames(X)<- c("ppp","x")#
m<-mean(X[,2])#
rndmz<- 500#
se.X<- sd(X[,2])/sqrt(rndmz)#
se <- ggplot(X, aes(ppp, x,#
                       ymin = m - se.X, #
                       ymax = m + se.X))#
se#
se + geom_linerange()#
se + geom_pointrange()#
se + geom_errorbar(width = 0.05)#
se + geom_crossbar(width = 0.05)#
library(Hmisc)#
m2 <- ggplot(X, aes(ppp, y=x)) #+ geom_point()#
m2 <- m2 + stat_summary(fun.data = "mean_cl_boot", geom = "crossbar",#
                        colour = "grey",#
                        fill="blue",width = 0.3) + xlab("rating")#
m2 + geom_point(aes(1,1.5, colour="red"))#
library(tnet)#
library(igraph)#
#
library(lmmfit)#
library(dplyr)#
library(gstudio)#
library(bipartite)#
library(bipartite)#
#
library(vegan)#
library(vegan)#
library(vegan)#
#
library(bipartite)#
library(sna)#
library(bipartite)#
library(vegan)#
library(tcltk)#
#
library(vegan)#
library(bipartite)#
library(vegan)#
library(bipartite)#
library(dplyr)#
library(phylin)#
?phylin#

setwd("/Users/pedro/Documents/Working/~RCode/MyRCode/effectiveness")#

# autoisolines: Code for automatically plotting isolines of#

