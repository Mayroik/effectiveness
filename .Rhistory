# The plot
p1<- ggplot(sde, aes(visits, eff_per_vis)) +
geom_point(shape=sde$group, size=5)+
geom_text(label=sde$animal, size=4, hjust=0.5, vjust=2) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (vis/10h)") +
ylab("No. fruits/visit (total handled)")
for(i in 1:nlines)
{
p1<- p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue") +
ylim(0, max(sde$eff_per_vis))
}
print(p1)
max(sde$eff_per_vis)
for(i in 1:nlines)
{
p1<- ggplot(sde, aes(visits, eff_per_vis)) +
geom_point(shape=sde$group, size=5)+
geom_text(label=sde$animal, size=4, hjust=0.5, vjust=2) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (vis/10h)") +
ylab("No. fruits/visit (total handled)")
p1<- p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue") +
ylim(0, max(sde$eff_per_vis))
}
print(p1)
# The plot
for(i in 1:nlines)
{
p1<- ggplot(sde, aes(visits, eff_per_vis)) +
geom_point(shape=sde$group, size=5)+
geom_text(label=sde$animal, size=4, hjust=0.5, vjust=2) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (vis/10h)") +
ylab("No. fruits/visit (total handled)") +
geom_line(data=pp, aes(vis1, pp[,i]), col="blue") +
ylim(0, max(sde$eff_per_vis))
}
print(p1)
#
# This plots the isolines (code prototype by Bernardo Santos.)
#
nlines <- 10 # number of isolines wanted
# slope of a straight line linking (left,bottom) to (right,above)
# corners of the graphic
alfa <- max(sde$eff_per_vis)/max(sde$visits)
# sequence of (nlines) regular spaced x values for the isoclines
xval <- seq(0, max(sde$visits),
length.out=(nlines+1))[2:(nlines+1)]
isoc <- (xval*xval*alfa) # values of the isoclines
vis1<-seq(0,max(sde$visits),length.out=1000)
pp<- as.data.frame(vis1)
for(i in 1:nlines)
{
pp<- cbind(pp, isoc[i]/vis1)
}
# The plot
p1<- ggplot(sde, aes(visits, eff_per_vis)) +
geom_point(shape=sde$group, size=5)+
geom_text(label=sde$animal, size=4, hjust=0.5, vjust=2) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (vis/10h)") +
ylab("No. fruits/visit (total handled)")
for(i in 1:nlines)
{
p1<- p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue") #+
#                ylim(0, max(sde$eff_per_vis))
}
print(p1)
# This plots the isolines (code prototype by Bernardo Santos.)
#
nlines <- 10 # number of isolines wanted
# slope of a straight line linking (left,bottom) to (right,above)
# corners of the graphic
alfa <- max(sde$eff_per_vis)/max(sde$visits)
# sequence of (nlines) regular spaced x values for the isoclines
xval <- seq(0, max(sde$visits),
length.out=(nlines+1))[2:(nlines+1)]
isoc <- (xval*xval*alfa) # values of the isoclines
vis1<-seq(0,max(sde$visits),length.out=1000)
pp<- as.data.frame(vis1)
for(i in 1:nlines)
{
pp<- cbind(pp, isoc[i]/vis1)
}
# The plot
p1<- ggplot(sde, aes(visits, eff_per_vis)) +
geom_point(shape=sde$group, size=5)+
geom_text(label=sde$animal, size=4, hjust=0.5, vjust=2) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (vis/10h)") +
ylab("No. fruits/visit (total handled)")
for(i in 1:nlines)
{
p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
}
print(p1)
i
pp[,i]
# The plot
p1<- ggplot(sde, aes(visits, eff_per_vis)) +
geom_point(shape=sde$group, size=5)+
geom_text(label=sde$animal, size=4, hjust=0.5, vjust=2) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (vis/10h)") +
ylab("No. fruits/visit (total handled)")
for(i in 1:nlines)
{
p1<-    p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
}
print(p1)
for(i in 1:nlines){
p1<-    p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
}
for(i in 1:nlines){
p1<-    p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
}
for(i in 1:nlines){
p1<-    p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
}
print(p1)
# The plot
p1<- ggplot(sde, aes(visits, eff_per_vis)) +
geom_point(shape=sde$group, size=5)+
geom_text(label=sde$animal, size=4, hjust=0.5, vjust=2) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (vis/10h)") +
ylab("No. fruits/visit (total handled)")
for(i in 2:nlines){
p1<-    p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
}
print(p1)
#
nlines <- 10 # number of isolines wanted
# slope of a straight line linking (left,bottom) to (right,above)
# corners of the graphic
alfa <- max(sde$eff_per_vis)/max(sde$visits)
# sequence of (nlines) regular spaced x values for the isoclines
xval <- seq(0, max(sde$visits),
length.out=(nlines+1))[2:(nlines+1)]
isoc <- (xval*xval*alfa) # values of the isoclines
vis1<-seq(0,max(sde$visits),length.out=1000)
pp<- as.data.frame(vis1)
for(i in 1:nlines)
{
pp<- cbind(pp, isoc[i]/vis1)
}
# The plot
p1<- ggplot(sde, aes(visits, eff_per_vis)) +
geom_point(shape=sde$group, size=5)+
geom_text(label=sde$animal, size=4, hjust=0.5, vjust=2) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (vis/10h)") +
ylab("No. fruits/visit (total handled)")
for(i in names(pp)[-1]){
#p1<-    p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
p1<-    p1 +   geom_line(data=pp, aes_string(y=i), col="blue")
}
print(p1)
p<-ggplot(data=df,aes(df[,1]))
for(i in names(df)[-1]){
p<-p+geom_line(aes_string(y=i))
}
# Input data here.
sde <- read.table("data.txt", header=T, sep="\t", dec=".", na.strings="NA")
# Variables in dataset:
# dataset	plant	animal	visits	prop_visits	eff_per_vis	eff_total
# prop_disp_service	frugivore_species
#
# This plots the isolines (code prototype by Bernardo Santos.)
#
nlines <- 10 # number of isolines wanted
# slope of a straight line linking (left,bottom) to (right,above)
# corners of the graphic
alfa <- max(sde$eff_per_vis)/max(sde$visits)
# sequence of (nlines) regular spaced x values for the isoclines
xval <- seq(0, max(sde$visits),
length.out=(nlines+1))[2:(nlines+1)]
isoc <- (xval*xval*alfa) # values of the isoclines
vis1<-seq(0,max(sde$visits),length.out=1000)
pp<- as.data.frame(vis1)
for(i in 1:nlines)
{
pp<- cbind(pp, isoc[i]/vis1)
}
# The plot
p1<- ggplot(sde, aes(visits, eff_per_vis)) +
geom_point(shape=sde$group, size=5)+
geom_text(label=sde$animal, size=4, hjust=0.5, vjust=2) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (vis/10h)") +
ylab("No. fruits/visit (total handled)")
for(i in names(pp)[-1]){
#p1<-    p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
p1<-    p1 +   geom_line(data=pp, aes_string(y=i), col="blue")
}
print(p1)
}
names(pp)[-1])
names(pp)
names(pp)[-1]
p1
p1<- ggplot(sde, aes(visits, eff_per_vis)) +
geom_point(shape=sde$group, size=5)+
geom_text(label=sde$animal, size=4, hjust=0.5, vjust=2) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (vis/10h)") +
ylab("No. fruits/visit (total handled)")
p1
# This plots the isolines (code prototype by Bernardo Santos.)
#
nlines <- 10 # number of isolines wanted
# slope of a straight line linking (left,bottom) to (right,above)
# corners of the graphic
alfa <- max(sde$eff_per_vis)/max(sde$visits)
# sequence of (nlines) regular spaced x values for the isoclines
xval <- seq(0, max(sde$visits),
length.out=(nlines+1))[2:(nlines+1)]
isoc <- (xval*xval*alfa) # values of the isoclines
vis1<-seq(0,max(sde$visits),length.out=1000)
pp<- as.data.frame(vis1)
for(i in 1:nlines)
{
pp<- cbind(pp, isoc[i]/vis1)
}
# The plot
#p1<- ggplot(sde, aes(visits, eff_per_vis)) +
p1<- ggplot(sde, aes(visits)) +
geom_point(shape=sde$group, size=5)+
geom_text(label=sde$animal, size=4, hjust=0.5, vjust=2) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (vis/10h)") +
ylab("No. fruits/visit (total handled)")
for(i in names(pp)[-1]){
#p1<-    p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
p1<-    p1 +   geom_line(data=pp, aes_string(y=i), col="blue")
}
print(p1)
}
# Variables in dataset:
# dataset	plant	animal	visits	prop_visits	eff_per_vis	eff_total
# prop_disp_service	frugivore_species
#
# This plots the isolines (code prototype by Bernardo Santos.)
#
nlines <- 10 # number of isolines wanted
# slope of a straight line linking (left,bottom) to (right,above)
# corners of the graphic
alfa <- max(sde$eff_per_vis)/max(sde$visits)
# sequence of (nlines) regular spaced x values for the isoclines
xval <- seq(0, max(sde$visits),
length.out=(nlines+1))[2:(nlines+1)]
isoc <- (xval*xval*alfa) # values of the isoclines
vis1<-seq(0,max(sde$visits),length.out=1000)
pp<- as.data.frame(vis1)
for(i in 1:nlines)
{
pp<- cbind(pp, isoc[i]/vis1)
}
# The plot
#p1<- ggplot(sde, aes(visits, eff_per_vis)) +
p1<- ggplot(sde, aes(visits)) +
geom_point(shape=sde$group, size=5)+
geom_text(label=sde$animal, size=4, hjust=0.5, vjust=2) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (vis/10h)") +
ylab("No. fruits/visit (total handled)")
p1
# Variables in dataset:
# dataset	plant	animal	visits	prop_visits	eff_per_vis	eff_total
# prop_disp_service	frugivore_species
#
# This plots the isolines (code prototype by Bernardo Santos.)
#
nlines <- 10 # number of isolines wanted
# slope of a straight line linking (left,bottom) to (right,above)
# corners of the graphic
alfa <- max(sde$eff_per_vis)/max(sde$visits)
# sequence of (nlines) regular spaced x values for the isoclines
xval <- seq(0, max(sde$visits),
length.out=(nlines+1))[2:(nlines+1)]
isoc <- (xval*xval*alfa) # values of the isoclines
vis1<-seq(0,max(sde$visits),length.out=1000)
pp<- as.data.frame(vis1)
for(i in 1:nlines)
{
pp<- cbind(pp, isoc[i]/vis1)
}
# The plot
#p1<- ggplot(sde, aes(visits, eff_per_vis)) +
p1<- ggplot(sde, aes(sde$visits)) +
geom_point(shape=sde$group, size=5)+
geom_text(label=sde$animal, size=4, hjust=0.5, vjust=2) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (vis/10h)") +
ylab("No. fruits/visit (total handled)")
for(i in names(pp)[-1]){
#p1<-    p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
p1<-    p1 +   geom_line(data=pp, aes_string(y=i), col="blue")
}
print(p1)
}
#
# This plots the isolines (code prototype by Bernardo Santos.)
#
nlines <- 10 # number of isolines wanted
# slope of a straight line linking (left,bottom) to (right,above)
# corners of the graphic
alfa <- max(sde$eff_per_vis)/max(sde$visits)
# sequence of (nlines) regular spaced x values for the isoclines
xval <- seq(0, max(sde$visits),
length.out=(nlines+1))[2:(nlines+1)]
isoc <- (xval*xval*alfa) # values of the isoclines
vis1<-seq(0,max(sde$visits),length.out=1000)
pp<- as.data.frame(vis1)
for(i in 1:nlines)
{
pp<- cbind(pp, isoc[i]/vis1)
}
# The plot
#p1<- ggplot(sde, aes(visits, eff_per_vis)) +
p1<- ggplot(sde, aes(sde$visits)) +
geom_point(shape=sde$group, size=5)+
geom_text(label=sde$animal, size=4, hjust=0.5, vjust=2) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (vis/10h)") +
ylab("No. fruits/visit (total handled)")
for(i in names(pp)[-1]){
#p1<-    p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
p1<-    p1 +   geom_line(data=pp, aes_string(y=i), col="blue")
}
print(p1)
#
# This plots the isolines (code prototype by Bernardo Santos.)
#
nlines <- 10 # number of isolines wanted
# slope of a straight line linking (left,bottom) to (right,above)
# corners of the graphic
alfa <- max(sde$eff_per_vis)/max(sde$visits)
# sequence of (nlines) regular spaced x values for the isoclines
xval <- seq(0, max(sde$visits),
length.out=(nlines+1))[2:(nlines+1)]
isoc <- (xval*xval*alfa) # values of the isoclines
vis1<-seq(0,max(sde$visits),length.out=1000)
pp<- as.data.frame(vis1)
for(i in 1:nlines)
{
pp<- cbind(pp, isoc[i]/vis1)
}
# The plot
#p1<- ggplot(sde, aes(visits, eff_per_vis)) +
p1<- ggplot(sde, aes(visits, eff_per_vis)) +
geom_point(shape=sde$group, size=5)+
geom_text(label=sde$animal, size=4, hjust=0.5, vjust=2) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (vis/10h)") +
ylab("No. fruits/visit (total handled)")
for(i in names(pp)[-1]){
#p1<-    p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
p1<-    p1 +   geom_line(data=pp, aes_string(y=i), col="blue")
}
print(p1)
names(sde)
#
# This plots the isolines (code prototype by Bernardo Santos.)
#
nlines <- 10 # number of isolines wanted
# slope of a straight line linking (left,bottom) to (right,above)
# corners of the graphic
alfa <- max(sde$eff_per_vis)/max(sde$visits)
# sequence of (nlines) regular spaced x values for the isoclines
xval <- seq(0, max(sde$visits),
length.out=(nlines+1))[2:(nlines+1)]
isoc <- (xval*xval*alfa) # values of the isoclines
vis1<-seq(0,max(sde$visits),length.out=1000)
pp<- as.data.frame(vis1)
for(i in 1:nlines)
{
pp<- cbind(pp, isoc[i]/vis1)
}
# The plot
#p1<- ggplot(sde, aes(visits, eff_per_vis)) +
p1<- ggplot(sde, aes(visits, eff_per_vis)) +
geom_point(shape=sde$group, size=5)+
geom_text(label=sde$animal, size=4, hjust=0.5, vjust=2) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (vis/10h)") +
ylab("No. fruits/visit (total handled)")
for(i in 2:nlines){
p1<-    p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
}
print(p1)
p1<- ggplot(sde, aes(visits, eff_per_vis)) +
geom_point(shape=sde$group, size=5)+
geom_text(label=sde$animal, size=4, hjust=0.5, vjust=2) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (vis/10h)") +
ylab("No. fruits/visit (total handled)")
p1
i=1
p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
i=2
p1
p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
i=3
p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
i=2
p1<-p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
i=3
p1<-p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
i=4
p1<-p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
i=5
p1<-p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
i=6
p1<-p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
i=7
p1<-p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
i=8
p1<-p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
i=9
p1<-p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
i=10
p1<-p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
p1
print(p1)
p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
p1 +   geom_line(data=pp, aes(vis1, pp[,2]), col="blue")
p1 +   geom_line(data=pp, aes(vis1, pp[,3]), col="blue")
p1<- p1 +   geom_line(data=pp, aes(vis1, pp[,3]), col="blue")
p1
p1<- p1 +   geom_line(data=pp, aes(vis1, pp[,4]), col="blue")
p1
# Variables in dataset:
# dataset	plant	animal	visits	prop_visits	eff_per_vis	eff_total
# prop_disp_service	frugivore_species
#
# This plots the isolines (code prototype by Bernardo Santos.)
#
nlines <- 10 # number of isolines wanted
# slope of a straight line linking (left,bottom) to (right,above)
# corners of the graphic
alfa <- max(sde$eff_per_vis)/max(sde$visits)
# sequence of (nlines) regular spaced x values for the isoclines
xval <- seq(0, max(sde$visits),
length.out=(nlines+1))[2:(nlines+1)]
isoc <- (xval*xval*alfa) # values of the isoclines
vis1<-seq(0,max(sde$visits),length.out=1000)
pp<- as.data.frame(vis1)
for(i in 1:nlines)
{
pp<- cbind(pp, isoc[i]/vis1)
}
# The plot
#p1<- ggplot(sde, aes(visits, eff_per_vis)) +
p1<- ggplot(sde, aes(visits, eff_per_vis)) +
geom_point(shape=sde$group, size=5)+
geom_text(label=sde$animal, size=4, hjust=0.5, vjust=2) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (vis/10h)") +
ylab("No. fruits/visit (total handled)")
p1
for(i in 2:nlines){
p1<-    p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
}
print(p1)
# Variables in dataset:
# dataset	plant	animal	visits	prop_visits	eff_per_vis	eff_total
# prop_disp_service	frugivore_species
#
# This plots the isolines (code prototype by Bernardo Santos.)
#
nlines <- 10 # number of isolines wanted
# slope of a straight line linking (left,bottom) to (right,above)
# corners of the graphic
alfa <- max(sde$eff_per_vis)/max(sde$visits)
# sequence of (nlines) regular spaced x values for the isoclines
xval <- seq(0, max(sde$visits),
length.out=(nlines+1))[2:(nlines+1)]
isoc <- (xval*xval*alfa) # values of the isoclines
vis1<-seq(0,max(sde$visits),length.out=1000)
pp<- as.data.frame(vis1)
for(i in 1:nlines)
{
pp<- cbind(pp, isoc[i]/vis1)
}
# The plot
#p1<- ggplot(sde, aes(visits, eff_per_vis)) +
p1<- ggplot(sde, aes(visits, eff_per_vis)) +
geom_point(shape=sde$group, size=5)+
geom_text(label=sde$animal, size=4, hjust=0.5, vjust=2) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (vis/10h)") +
ylab("No. fruits/visit (total handled)")
p1
for(i in 2:nlines){
p1<-    p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
print(p1)
}
p1<- ggplot(sde, aes(visits, eff_per_vis)) +
geom_point(shape=sde$group, size=5)+
geom_text(label=sde$animal, size=4, hjust=0.5, vjust=2) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (vis/10h)") +
ylab("No. fruits/visit (total handled)")
p1
i=2
p1<-    p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
print(p1)
i=3
p1<-    p1 +   geom_line(data=pp, aes(vis1, pp[,i]), col="blue")
print(p1)
