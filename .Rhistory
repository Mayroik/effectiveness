d<-as.data.frame(cbind(q1, q2, group, label))
names(d)
nlines <- nlines+1 # number of isolines wanted
# slope of a straight line linking (left,bottom) to (right,above)
# corners of the graphic
alfa <- max(d$q2)/max(d$q1)
# sequence of (nlines) regular spaced x values for the isoclines
xval <- seq(0, max(d$q1),
length.out=(nlines+1))[2:(nlines)]
isoc <- (xval*xval*alfa) # values of the isoclines
vis1<-seq(0, max(d$q1), length.out= 1000)
#
pp<- as.data.frame(vis1) # Build dataset for within loop plot.
for(i in 1:nlines)
{
pp<- cbind(pp, isoc[i]/vis1)
}
# Main plot ----------------------------------------------------------------
# mytheme_bw.R
devtools::source_gist("https://gist.github.com/b843fbafa3af8f408972")
#
p1<- ggplot(d, aes(x=q1, y=q2)) +
geom_point(shape= group, size=5) +
geom_text(size= 4, label= label, hjust= 0.5, vjust= 1.9) +
mytheme_bw()
# Adding isolines
#    labelx<- 0.8*max(q1)
for(i in 2:nlines){
#        labely<- pp[,i][800]
p1= p1 + geom_line(aes(x, y),
data= data.frame(x= pp$vis1, y= pp[,i]),
col="blue", size = 0.25, alpha= 0.6) +
ylim(0, max(q2)) +
xlab("Visit rate (/10h)") +
ylab("Effectiveness/visit (No. fruits handled/vis)") # +
# Old code: geom_text does overplotting!
#         geom_text(aes(), data= NULL, x= labelx, y= labely,
#                     label = paste("QC = ", round(isoc[i], digits=1)),
#                     size = 4, colour = "red")
}
# Adding the isoline labels
labelx<- as.vector(rep(0.8*max(sde$visits), nlines))
labely<- t(as.vector(pp[800,2:12]))
ppp<- as.data.frame(cbind(labelx,labely))
p1<- p1 + annotate("text", x= ppp[,1], y= ppp[,2],
label= paste("QC = ", round(isoc, digits=1)),
size= 4, colour= "red", hjust = 0)
print(p1)
}
source('~/.active-rstudio-document', echo=TRUE)
effectiveness(sde$visits, sde$eff_per_vis, sde$group, sde$animal, 10)
labely
pp
dim(pp)
str(pp)
nlines
effectiveness(sde$visits, sde$eff_per_vis, sde$group, sde$animal, 5)
d<-as.data.frame(cbind(q1, q2, group, label))
names(d)
nlines
nlines=10
alfa <- max(d$q2)/max(d$q1)
# sequence of (nlines) regular spaced x values for the isoclines
xval <- seq(0, max(d$q1),
length.out= (nlines))[2:(nlines)]
xval
seq(0, max(d$q1),
length.out= (nlines))
xval <- seq(0, max(d$q1),
length.out= (nlines))    #[2:(nlines)]
isoc <- (xval*xval*alfa) # values of the isoclines
vis1<-seq(0, max(d$q1), length.out= 1000)
#
pp<- as.data.frame(vis1) # Build dataset for within loop plot.
for(i in 1:nlines)
{
pp<- cbind(pp, isoc[i]/vis1)
}
dim(pp)
# Main plot ----------------------------------------------------------------
# mytheme_bw.R
devtools::source_gist("https://gist.github.com/b843fbafa3af8f408972")
#
p1<- ggplot(d, aes(x=q1, y=q2)) +
geom_point(shape= group, size=5) +
geom_text(size= 4, label= label, hjust= 0.5, vjust= 1.9) +
mytheme_bw()
# Adding isolines
#    labelx<- 0.8*max(q1)
for(i in nlines){
#        labely<- pp[,i][800]
p1= p1 + geom_line(aes(x, y),
data= data.frame(x= pp$vis1, y= pp[,i]),
col="blue", size = 0.25, alpha= 0.6) +
ylim(0, max(q2)) +
xlab("Visit rate (/10h)") +
ylab("Effectiveness/visit (No. fruits handled/vis)") # +
# Old code: geom_text does overplotting!
#         geom_text(aes(), data= NULL, x= labelx, y= labely,
#                     label = paste("QC = ", round(isoc[i], digits=1)),
#                     size = 4, colour = "red")
}
p1
# Adding the isoline labels
labelx<- as.vector(rep(0.8*max(sde$visits), nlines))
labely<- t(as.vector(pp[800,2:12]))
ppp<- as.data.frame(cbind(labelx,labely))
p1<- p1 + annotate("text", x= ppp[,1], y= ppp[,2],
label= paste("QC = ", round(isoc, digits=1)),
size= 4, colour= "red", hjust = 0)
print(p1)
# Adding the isoline labels
labelx<- as.vector(rep(0.8*max(sde$visits), nlines))
labely<- t(as.vector(pp[800,2:10]))
ppp<- as.data.frame(cbind(labelx,labely))
p1<- p1 + annotate("text", x= ppp[,1], y= ppp[,2],
label= paste("QC = ", round(isoc, digits=1)),
size= 4, colour= "red", hjust = 0)
print(p1)
labelx<- as.vector(rep(0.8*max(sde$visits), nlines))
labely<- t(as.vector(pp[800,2:11]))
ppp<- as.data.frame(cbind(labelx,labely))
p1<- p1 + annotate("text", x= ppp[,1], y= ppp[,2],
label= paste("QC = ", round(isoc, digits=1)),
size= 4, colour= "red", hjust = 0)
print(p1)
dim(pp)
str(pp)
d<-as.data.frame(cbind(q1, q2, group, label))
names(d)
nlines <- nlines # number of isolines wanted
# slope of a straight line linking (left,bottom) to (right,above)
# corners of the graphic
alfa <- max(d$q2)/max(d$q1)
# sequence of (nlines) regular spaced x values for the isoclines
xval <- seq(0, max(d$q1),
length.out= (nlines))    #[2:(nlines)]
isoc <- (xval*xval*alfa) # values of the isoclines
vis1<-seq(0, max(d$q1), length.out= 1000)
#
pp<- as.data.frame(vis1) # Build dataset for within loop plot.
for(i in 2:nlines)
{
pp<- cbind(pp, isoc[i]/vis1)
}
# Main plot ----------------------------------------------------------------
# mytheme_bw.R
devtools::source_gist("https://gist.github.com/b843fbafa3af8f408972")
#
p1<- ggplot(d, aes(x=q1, y=q2)) +
geom_point(shape= group, size=5) +
geom_text(size= 4, label= label, hjust= 0.5, vjust= 1.9) +
mytheme_bw()
# Adding isolines
#    labelx<- 0.8*max(q1)
for(i in nlines){
#        labely<- pp[,i][800]
p1= p1 + geom_line(aes(x, y),
data= data.frame(x= pp$vis1, y= pp[,i]),
col="blue", size = 0.25, alpha= 0.6) +
ylim(0, max(q2)) +
xlab("Visit rate (/10h)") +
ylab("Effectiveness/visit (No. fruits handled/vis)") # +
# Old code: geom_text does overplotting!
#         geom_text(aes(), data= NULL, x= labelx, y= labely,
#                     label = paste("QC = ", round(isoc[i], digits=1)),
#                     size = 4, colour = "red")
}
p1
# Adding the isoline labels
labelx<- as.vector(rep(0.8*max(sde$visits), nlines))
labely<- t(as.vector(pp[800,2:11]))
ppp<- as.data.frame(cbind(labelx,labely))
p1<- p1 + annotate("text", x= ppp[,1], y= ppp[,2],
label= paste("QC = ", round(isoc, digits=1)),
size= 4, colour= "red", hjust = 0)
print(p1)
d<-as.data.frame(cbind(q1, q2, group, label))
names(d)
nlines <- nlines # number of isolines wanted
# slope of a straight line linking (left,bottom) to (right,above)
# corners of the graphic
alfa <- max(d$q2)/max(d$q1)
# sequence of (nlines) regular spaced x values for the isoclines
xval <- seq(0, max(d$q1),
length.out= (nlines))    #[2:(nlines)]
isoc <- (xval*xval*alfa) # values of the isoclines
vis1<-seq(0, max(d$q1), length.out= 1000)
#
pp<- as.data.frame(vis1) # Build dataset for within loop plot.
for(i in 2:nlines)
{
pp<- cbind(pp, isoc[i]/vis1)
}
# Main plot ----------------------------------------------------------------
# mytheme_bw.R
devtools::source_gist("https://gist.github.com/b843fbafa3af8f408972")
#
p1<- ggplot(d, aes(x=q1, y=q2)) +
geom_point(shape= group, size=5) +
geom_text(size= 4, label= label, hjust= 0.5, vjust= 1.9) +
mytheme_bw()
# Adding isolines
#    labelx<- 0.8*max(q1)
for(i in 1:nlines+1){
#        labely<- pp[,i][800]
p1= p1 + geom_line(aes(x, y),
data= data.frame(x= pp$vis1, y= pp[,i]),
col="blue", size = 0.25, alpha= 0.6) +
ylim(0, max(q2)) +
xlab("Visit rate (/10h)") +
ylab("Effectiveness/visit (No. fruits handled/vis)") # +
# Old code: geom_text does overplotting!
#         geom_text(aes(), data= NULL, x= labelx, y= labely,
#                     label = paste("QC = ", round(isoc[i], digits=1)),
#                     size = 4, colour = "red")
}
# Adding the isoline labels
labelx<- as.vector(rep(0.8*max(sde$visits), nlines))
labely<- t(as.vector(pp[800,2:11]))
ppp<- as.data.frame(cbind(labelx,labely))
p1<- p1 + annotate("text", x= ppp[,1], y= ppp[,2],
label= paste("QC = ", round(isoc, digits=1)),
size= 4, colour= "red", hjust = 0)
print(p1)
ppp
isoc
pp[800,2:11])
pp[800,2:11]
as.vector(pp[800,2:11])
labely
pp$vis1
pp[,i]
dim(pp)
head(pp)
# Function to plot effectiveness landscapes.
# Example:
# effectiveness(sde$visits, sde$eff_per_vis, sde$group, sde$animal, 10)
effectiveness<- function(q1, q2, group= NA, label= NA, nlines= 10){
# q1 is the component to plot on X axis
# q2 is the component to plot on Y axis
# group is a group label
# label is a taxa label
require(devtools)
require(ggplot2)
#
d<-as.data.frame(cbind(q1, q2, group, label))
names(d)
nlines <- nlines # number of isolines wanted
# slope of a straight line linking (left,bottom) to (right,above)
# corners of the graphic
alfa <- max(d$q2)/max(d$q1)
# sequence of (nlines) regular spaced x values for the isoclines
xval <- seq(0, max(d$q1),
length.out= (nlines))    #[2:(nlines)]
isoc <- (xval*xval*alfa) # values of the isoclines
vis1<-seq(0, max(d$q1), length.out= 1000)
#
pp<- as.data.frame(vis1) # Build dataset for within loop plot.
for(i in 2:nlines)
{
pp<- cbind(pp, isoc[i]/vis1)
}
# Main plot ----------------------------------------------------------------
# mytheme_bw.R
devtools::source_gist("https://gist.github.com/b843fbafa3af8f408972")
#
p1<- ggplot(d, aes(x=q1, y=q2)) +
geom_point(shape= group, size=5) +
geom_text(size= 4, label= label, hjust= 0.5, vjust= 1.9) +
mytheme_bw()
# Adding isolines
#    labelx<- 0.8*max(q1)
for(i in 1:nlines+1){
#        labely<- pp[,i][800]
p1= p1 + geom_line(aes(x, y),
data= data.frame(x= pp$vis1, y= pp[,i]),
col="blue", size = 0.25, alpha= 0.6) +
ylim(0, max(q2)) +
xlab("Visit rate (/10h)") +
ylab("Effectiveness/visit (No. fruits handled/vis)") # +
# Old code: geom_text does overplotting!
#         geom_text(aes(), data= NULL, x= labelx, y= labely,
#                     label = paste("QC = ", round(isoc[i], digits=1)),
#                     size = 4, colour = "red")
}
# Adding the isoline labels
labelx<- as.vector(rep(0.8*max(sde$visits), nlines))
labely<- t(as.vector(pp[800,2:11]))
ppp<- as.data.frame(cbind(labelx,labely))
p1<- p1 + annotate("text", x= ppp[,1], y= ppp[,2],
label= paste("QC = ", round(isoc, digits=1)),
size= 4, colour= "red", hjust = 0)
print(p1)
}
#---------------------------------------------------------------------------
effectiveness(sde$visits, sde$eff_per_vis, sde$group, sde$animal, 10)
source('~/Documents/Working/~RCode/MyRCode/effectiveness/sde_gg.R', echo=TRUE)
p1<- ggplot(sde, aes(x=visits, y=eff_per_vis)) +
geom_point(shape=sde$group, size=5) +
geom_text(size=4, label=sde$animal,hjust=0.5, vjust=1.9) +
mytheme_bw()
# Adding isolines
for(i in 1:nlines+1){
#labely<- isoc[i]/(0.8*max(sde$eff_per_vis)
#    labely<- pp[,i][800]
p1= p1 + geom_line(aes(x, y),
data= data.frame(x= pp$vis1, y= pp[,i]),
col="blue", size = 0.25, alpha= 0.6) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (/10h)") +
ylab("Effectiveness/visit (No. fruits handled/vis)") # +
# Old code: geom_text does overplotting!
#         geom_text(aes(), data= NULL, x= labelx, y= labely,
#                     label = paste("QC = ", round(isoc[i], digits=1)),
#                     size = 4, colour = "red")
}
# Adding the isoline labels
labelx<- as.vector(rep(0.8*max(sde$visits),nlines+1))
labely<- t(as.vector(pp[850,2:11]))
p1<- p1 + annotate("text", x= ppp[,1], y= ppp[,2],
label= paste("QC = ", round(isoc, digits=1)), size=4, colour = "red")
print(p1)
p1<- ggplot(sde, aes(x=visits, y=eff_per_vis)) +
geom_point(shape=sde$group, size=5) +
geom_text(size=4, label=sde$animal,hjust=0.5, vjust=1.9) +
mytheme_bw()
# Adding isolines
for(i in 1:nlines+1){
#labely<- isoc[i]/(0.8*max(sde$eff_per_vis)
#    labely<- pp[,i][800]
p1= p1 + geom_line(aes(x, y),
data= data.frame(x= pp$vis1, y= pp[,i]),
col="blue", size = 0.25, alpha= 0.6) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (/10h)") +
ylab("Effectiveness/visit (No. fruits handled/vis)") # +
# Old code: geom_text does overplotting!
#         geom_text(aes(), data= NULL, x= labelx, y= labely,
#                     label = paste("QC = ", round(isoc[i], digits=1)),
#                     size = 4, colour = "red")
}
# Adding the isoline labels
labelx<- as.vector(rep(0.8*max(sde$visits),nlines+1))
labely<- t(as.vector(pp[950,2:11]))
p1<- p1 + annotate("text", x= ppp[,1], y= ppp[,2],
label= paste("QC = ", round(isoc, digits=1)), size=4, colour = "red")
print(p1)
p1<- ggplot(sde, aes(x=visits, y=eff_per_vis)) +
geom_point(shape=sde$group, size=5) +
geom_text(size=4, label=sde$animal,hjust=0.5, vjust=1.9) +
mytheme_bw()
# Adding isolines
for(i in 1:nlines+1){
#labely<- isoc[i]/(0.8*max(sde$eff_per_vis)
#    labely<- pp[,i][800]
p1= p1 + geom_line(aes(x, y),
data= data.frame(x= pp$vis1, y= pp[,i]),
col="blue", size = 0.25, alpha= 0.6) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (/10h)") +
ylab("Effectiveness/visit (No. fruits handled/vis)") # +
# Old code: geom_text does overplotting!
#         geom_text(aes(), data= NULL, x= labelx, y= labely,
#                     label = paste("QC = ", round(isoc[i], digits=1)),
#                     size = 4, colour = "red")
}
# Adding the isoline labels
labelx<- as.vector(rep(0.8*max(sde$visits),nlines+1))
labely<- t(as.vector(pp[1000,2:11]))
p1<- p1 + annotate("text", x= ppp[,1], y= ppp[,2],
label= paste("QC = ", round(isoc, digits=1)), size=4, colour = "red")
print(p1)
p1<- ggplot(sde, aes(x=visits, y=eff_per_vis)) +
geom_point(shape=sde$group, size=5) +
geom_text(size=4, label=sde$animal,hjust=0.5, vjust=1.9) +
mytheme_bw()
# Adding isolines
for(i in 1:nlines+1){
#labely<- isoc[i]/(0.8*max(sde$eff_per_vis)
#    labely<- pp[,i][800]
p1= p1 + geom_line(aes(x, y),
data= data.frame(x= pp$vis1, y= pp[,i]),
col="blue", size = 0.25, alpha= 0.6) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (/10h)") +
ylab("Effectiveness/visit (No. fruits handled/vis)") # +
# Old code: geom_text does overplotting!
#         geom_text(aes(), data= NULL, x= labelx, y= labely,
#                     label = paste("QC = ", round(isoc[i], digits=1)),
#                     size = 4, colour = "red")
}
# Adding the isoline labels
labelx<- as.vector(rep(0.8*max(sde$visits),nlines+1))
labely<- t(as.vector(pp[600,2:11]))
p1<- p1 + annotate("text", x= ppp[,1], y= ppp[,2],
label= paste("QC = ", round(isoc, digits=1)), size=4, colour = "red")
print(p1)
source('~/Documents/Working/~RCode/MyRCode/effectiveness/sde_gg.R', echo=TRUE)
source('~/Documents/Working/~RCode/MyRCode/effectiveness/effectiveness.R', echo=TRUE)
effcetiveness(sde$visits, sde$eff_per_vis, sde$group, sde$animal,5)
effectiveness(sde$visits, sde$eff_per_vis, sde$group, sde$animal,5)
isoc
labelx
labely
labelx<- rep(0.8*max(sde$visits), nlines)
labelx
labely<- pp[,i][800]
labely
dim(pp)
str(pp)
labely<- pp[800,2:11]
labelx
labely
dim(labelx)
dim(labely)
labely<- t(pp[800,2:11])
dim(labely)
labely
labelx
isoc
p1
p1<- ggplot(sde, aes(x=visits, y=eff_per_vis)) +
geom_point(shape=sde$group, size=5) +
geom_text(size=4, label=sde$animal,hjust=0.5, vjust=1.9) +
mytheme_bw()
p1<- ggplot(sde, aes(x=visits, y=eff_per_vis)) +
geom_point(shape=sde$group, size=5) +
geom_text(size=4, label=sde$animal,hjust=0.5, vjust=1.9) +
mytheme_bw()
# Adding isolines
labelx<- rep(0.8*max(sde$visits), nlines)
labely<- t(pp[800,2:11])
for(i in 1:nlines+1){
#labely<- isoc[i]/(0.8*max(sde$eff_per_vis)
#    labely<- pp[,i][800]
p1= p1 + geom_line(aes(x, y),
data= data.frame(x= pp$vis1, y= pp[,i]),
col="blue", size = 0.25, alpha= 0.6) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (/10h)") +
ylab("Effectiveness/visit (No. fruits handled/vis)")  # +
}
p1
p1 + annotate("text", x= labelx, y= labely,
label=paste("QC= ", round(isoc,1)),
size=12, colour="red", hjust=0)
label=paste("QC= ", round(isoc,1)
)
#---------------------------------------------------------------------------
# Code with ggplot2
# This plots the isolines (code prototype by Bernardo Santos.)
#
nlines <- 10 # number of isolines wanted
# slope of a straight line linking (left,bottom) to (right,above)
# corners of the graphic
alfa <- max(sde$eff_per_vis)/max(sde$visits)
# sequence of (nlines) regular spaced x values for the isoclines
xval <- seq(0, max(sde$visits),
length.out=(nlines+1))[2:(nlines+1)]
isoc <- (xval*xval*alfa) # values of the isoclines
vis1<-seq(0,max(sde$visits),length.out=1000)
#---------------------------------------------------------------------------
pp<- as.data.frame(vis1) # Build dataset for within loop plot.
for(i in 1:nlines)
{
pp<- cbind(pp, isoc[i]/vis1)
}
# Main plot ----------------------------------------------------------------
require(devtools)
require(ggplot2)
# mytheme_bw.R
devtools::source_gist("https://gist.github.com/b843fbafa3af8f408972")
#
p1<- ggplot(sde, aes(x=visits, y=eff_per_vis)) +
geom_point(shape=sde$group, size=5) +
geom_text(size=4, label=sde$animal,hjust=0.5, vjust=1.9) +
mytheme_bw()
# Adding isolines
labelx<- rep(0.8*max(sde$visits), nlines)
labely<- t(pp[800,2:11])
for(i in 1:nlines+1){
#labely<- isoc[i]/(0.8*max(sde$eff_per_vis)
#    labely<- pp[,i][800]
p1= p1 + geom_line(aes(x, y),
data= data.frame(x= pp$vis1, y= pp[,i]),
col="blue", size = 0.25, alpha= 0.6) +
ylim(0, max(sde$eff_per_vis)) +
xlab("Visit rate (/10h)") +
ylab("Effectiveness/visit (No. fruits handled/vis)")  # +
#        geom_text(aes(), data= NULL, x= labelx, y= labely,
#            label = paste("QC = ", round(isoc[i], digits=1)),
#            size = 4, colour = "red")
}
p1 + annotate("text", x= labelx, y= labely,
label=paste("QC= ", round(isoc,1)),
size=12, colour="red", hjust=0)
print(p1)
#---------------------------------------------------------------------------
labelx
labely
labely<- as.vector(t(pp[800,2:11]))
p1 + annotate("text", x= labelx, y= labely,
label=paste("QC= ", round(isoc,1)),
size=12, colour="red", hjust=0)
p1 + annotate("text", x= labelx, y= labely,
label=paste("QC= ", round(isoc,1)),
size=4, colour="red", hjust=0)
source('~/.active-rstudio-document', echo=TRUE)
effectiveness(sde$visits, sde$eff_per_vis, sde$group, sde$animal,5)
source('~/Documents/Working/~RCode/MyRCode/effectiveness/effectiveness.R', echo=TRUE)
effectiveness(sde$visits, sde$eff_per_vis, sde$group, sde$animal,5)
